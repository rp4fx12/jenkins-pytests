<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="2" name="pytest" skips="0" tests="7" time="1.770"><testcase classname="tests.test_jenkins_pytests" file="tests/test_jenkins_pytests.py" line="23" name="test_content" time="1.6436553001403809"><system-err>/Users/rohan/anaconda/lib/python3.6/site-packages/bs4/__init__.py:181: UserWarning: No parser was explicitly specified, so I&apos;m using the best available HTML parser for this system (&quot;lxml&quot;). This usually isn&apos;t a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.

The code that caused this warning is on line 6 of the file /Users/rohan/anaconda/bin/py.test. To get rid of this warning, change code that looks like this:

 BeautifulSoup(YOUR_MARKUP})

to this:

 BeautifulSoup(YOUR_MARKUP, &quot;lxml&quot;)

  markup_type=markup_type))
</system-err></testcase><testcase classname="tests.test_jenkins_pytests" file="tests/test_jenkins_pytests.py" line="29" name="test_command_line_interface" time="0.004153013229370117"></testcase><testcase classname="tests.test_jenkins_pytests" file="tests/test_jenkins_pytests.py" line="40" name="testOneEqualsOne" time="0.00035381317138671875"></testcase><testcase classname="tests.test_jenkins_pytests" file="tests/test_jenkins_pytests.py" line="43" name="testAssertValInList" time="0.00032401084899902344"></testcase><testcase classname="tests.test_jenkins_pytests" file="tests/test_jenkins_pytests.py" line="47" name="testExpectedFailTest" time="0.0022242069244384766"><failure message="assert False == True">def testExpectedFailTest():
&gt;       assert False == True
E       assert False == True

tests/test_jenkins_pytests.py:49: AssertionError</failure></testcase><testcase classname="tests.test_random_tests" file="tests/test_random_tests.py" line="5" name="testValidTest" time="0.00043702125549316406"></testcase><testcase classname="tests.test_random_tests" file="tests/test_random_tests.py" line="8" name="testFailingTest" time="0.0004000663757324219"><failure message="assert False">def testFailingTest():
&gt;       assert False
E       assert False

tests/test_random_tests.py:10: AssertionError</failure></testcase></testsuite>